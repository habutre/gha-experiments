name: staging-feature

on:
  # on PR closed or merged
  pull_request:
    types:
      - closed
  # on branch deleted
  delete:


jobs:

# TODO: remove when tested
  triggered-by-branch-deletion:
    if: (!startsWith(github.ref, 'refs/tags') && github.event.ref_type == 'branch')
    runs-on:
      - ubuntu-20.04
    #environment: staging
    steps:
      - name: Extract release from branch name
        run: |
          BRANCH_NAME=${{ github.event.ref }}
          echo "API_SOURCE_NAME=${BRANCH_NAME}" >> "$GITHUB_ENV"
          echo "Branch ${BRANCH_NAME} deleted"
    outputs:
      branch-name: ${{ env.API_SOURCE_NAME }}

  triggered-by-pull-request:
    if: (!startsWith(github.ref, 'refs/tags') && github.event_name == 'pull_request')
    runs-on:
      - ubuntu-20.04
    #environment: staging
    steps:
      - name: Extract release from pull request title
        run: |
          PR_TITLE=${{ github.event.pull_request.title }}
          echo "API_SOURCE_NAME=${PR_TITLE}" >> "$GITHUB_ENV"
          echo "PR closed ${PR_TITLE} closed"
    outputs:
      pr-title: ${{ env.API_SOURCE_NAME }}

  helm-release:
    if: ${{ always() }}
    runs-on:
      - ubuntu-20.04
    needs:
      - triggered-by-pull-request
      - triggered-by-branch-deletion
    #environment: staging
    steps:
      - name: Generate Helm release name
        if: (!startsWith(github.ref, 'refs/tags'))
        run: |
          NAME_FROM_BRANCH=${{ needs.triggered-by-branch-deletion.outputs.branch-name }}
          NAME_FROM_PR_TITLE=${{ needs.triggered-by-pull-request.outputs.pr-title }}
          NAME=

          if [[ -n "${NAME_FROM_BRANCH}" ]]; then
            JIRA_TICKET=$(echo ${NAME_FROM_BRANCH} | grep -oE "([a-zA-Z]{2,5}-[0-9]+)" | tr '[A-Z]' '[a-z]')
            NAME=${JIRA_TICKET}-app-api
          fi

          if [[ -n "${NAME_FROM_PR_TITLE}" ]]; then
            JIRA_TICKET=$(echo ${NAME_FROM_PR_TITLE} | grep -oE "([a-zA-Z]{2,5}-[0-9]+)" | tr '[A-Z]' '[a-z]')
            NAME=${JIRA_TICKET}-app-api
          fi

          if [[ -z "${NAME}" ]]; then
            echo "Release Name is empty or does not match with expected pattern: ([a-zA-Z]{2,5}-[0-9]+) e.g. JIRA-0001<<branch / pr title>>"
            exit 1
          fi

          echo "API_HELM_RELEASE_NAME=${NAME}" >> "$GITHUB_ENV"
          echo "Helm Release ${NAME} generated"
    outputs:
      helm-release-name: ${{ env.API_HELM_RELEASE_NAME }}

  clean-up:
    if: ${{ always() }}
    runs-on:
      - ubuntu-20.04
    needs:
      - helm-release
    #environment: staging
    env:
      RELEASE_NAME: ${{ needs.helm-release.outputs.helm-release-name }}
    steps:
      - name: Uninstall feature environment ${{ env.RELEASE_NAME }}
        run: |
          echo "From here IF and only IF the release ${{ env.RELEASE_NAME }} exists the resources will be removed"
