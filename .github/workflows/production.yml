name: production

on:
  push:
    branches:
      - master

env:
  VERSION: v0.0.${{ github.run_id }}
  DOCKER_TAG: ${{ github.ref_name }}-${{ github.run_id }}

jobs:

  quality:
    uses: ./.github/workflows/quality.yml
    secrets: inherit

  packaging:
    needs: quality
    uses: ./.github/workflows/packaging.yml
    secrets: inherit

  release:
    if: (github.ref_name == 'master') && (!startsWith(github.ref, 'refs/tags'))
    needs: packaging
    runs-on: ubuntu-20.04
    name: OTP ${{matrix.otp}} / Elixir ${{matrix.elixir}}
    strategy:
      matrix:
        otp: ['21.3', '22.2']
        elixir: ['1.8.2', '1.9.4']
    environment: production
    steps:
      - uses: actions/checkout@v3
      - name: create tag and release
        run: |
          echo "Creates tag xxx"
          echo "Creates release xxx with content vvv"
          ls -lah ${{ github.workspace }}
          git -v
          git remote -v
          echo "Current tags"
          git tag -l
          echo "Creating tag $VERSION"
          git tag $VERSION
          echo "Pushing created tag"
          git push --tags
          echo "Was the tag created? Listing below"
          git tag -l
          echo "Creating release"
          gh api \
            --method POST \
            -H "Accept: application/vnd.github+json" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            /repos/habutre/gha-sandbox/releases \
            -f tag_name=$VERSION \
           -f target_commitish='master' \
           -f name="GH Sandbox $VERSION" \
           -f body='The GH Sandbox release includes:' \
           -F draft=false \
           -F prerelease=false \
           -F generate_release_notes=true


  deploy:
    if: (github.ref_name == 'master') && (!startsWith(github.ref, 'refs/tags'))
    name: OTP ${{matrix.otp}} / Elixir ${{matrix.elixir}}
    needs: release
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        otp: ['21.3', '22.2']
        elixir: ['1.8.2', '1.9.4']
    environment: production
    steps:
      - name: Deploy Helm chart ${{ env.VERSION }} / Docker image ${{ env.DOCKER_TAG }}
        run: |
          echo "Perform the steps to deploy"
          echo "Deploy artifacts in Artifactory"


